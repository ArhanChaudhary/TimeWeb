/* THIS FILE HAS NOT YET BEEN FULLY DOCUMENTED */
html {
    color-scheme: light;
}
#assignments-container {
    position: relative;
    overflow-y: auto;
    opacity: 0;
    margin-top: -10px;
    padding-top: 10px;
    --scale-percent-y: 1.05;
    --vertical-assignment-padding: 33px;
    --horizontal-assignment-padding: 15px;
    --outer-assignment-vertical-padding: 8px;
    --outer-assignment-horizontal-padding: 25px;
}
#assignments-container:focus {
    /* Arrow scroll manually focuses */
    outline: none;
}
main {
    overflow-y: hidden;
}
main.finished-header-transition #assignments-container {
    /* ensure the initial transition visual doesnt break */
    height: 100%;
}
main:not(.animate) {
    transition: box-shadow 1.4s cubic-bezier(.32,1.01,.53,1.15);
}
header:not(.animate), header:not(.animate)::after {
    transition: transform 1.7s cubic-bezier(.29,.81,.37,.99);
}
#assignments-container.animate {
    transform: translateY(max(-400px, calc(-100% - 20px)));
    /* transform:translateY(min(calc(400px, calc(100% + 20px))); */
}
#assignments-container:not(.animate) {
    transition: transform 1.5s cubic-bezier(.29,.81,.37,.99);
}
main.animate {
    box-shadow: none;
}
header.animate {
    transform: translateY(calc(-1 * var(--header-height)));
}
header.animate::after {
    transform: none;
}
main.background-image-exists {
    padding-left: 0;
    padding-right: 0;
}
@media not screen and (max-width: 850px) {
    main.background-image-exists #assignments-container {
        /* fixes floating scrollbar caused by <main> padding */
        padding-right: 20px;
        padding-left: 20px;
    }
}
#assignments-container.viewing-deleted-assignments .graph-footer {
    height: var(--assignment-margin-bottom);
}
#assignments-container.viewing-deleted-assignments .left-side-of-header {
    --left-side-of-header-width: initial;
}
#assignments-container.viewing-deleted-assignments .assignment-container ~ #no-assignments-message {
    display: none;
}
#assignments-container.viewing-deleted-assignments #no-assignments-message {
    padding: 0 var(--outer-assignment-horizontal-padding);
    font-size: 18px;
}
#extra-navs-positioner {
    box-sizing: border-box;
    min-height: calc(100vh - var(--header-height) - 10px);
    position: relative;
}
#background-image {
    bottom: 0;
    left: 0;
    width: 100%;
    height: calc(100% - var(--header-height));
    position: fixed;
    /* Don't change the z-index to -1 because it will go behind <main>, showing its side box shadows */
    pointer-events: none;
    -o-object-fit: cover;
       object-fit: cover;
}
#tutorial-message {
    padding: 0 10px;
}
#assignments-header {
    position: relative;
    font-size: 18px;
    z-index: 1001;
    padding: 0 var(--outer-assignment-horizontal-padding);
    display: flex;
    align-items: center;
    flex-wrap: wrap;
}
#assignments-header > * {
    white-space: nowrap;
}
#todo-wrapper {
    width: 100%;
    margin-bottom: 4px;
}
#todo-wrapper .generic-button {
    /* is 1px too tall and messes up the height */
    margin-bottom: -1px;
}
#current-date-container {
    position: relative;
    order: 1;
    display: flex;
    align-items: center;
    gap: 5px;
}
#go-to-next-day {
    cursor: pointer;
}
#sort-assignments-container {
    display: flex;
    align-items: center;
    order: 1;
    gap: 3px;
    margin-left: auto;
    padding-left: 35px;
}
#id_assignment_sorting {
    padding-top: 1px !important;
    padding-bottom: 1px !important;
    text-align: initial;
    height: 22px;
}
#id_assignment_sorting:focus:hover,
#go-to-next-day:focus:hover {
    outline: 0;
}
.hide-info {
    height: 0;
    width: 0;
    overflow: hidden;
    position: absolute;
}
.assignment-container {
    /* I remember the 2s was here for an important reason but i have no clue what */
    transition: transform 2s ease-in-out;
    font-size: 17px;
    position: relative;
    padding: var(--outer-assignment-vertical-padding) var(--outer-assignment-horizontal-padding);
    --shortcut-border-radius: 6px;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
}
.assignment-container.transform-instantly, .assignment-container.transform-instantly .assignment-footer {
    transition: none !important;
}
#extra-navs-positioner {
    padding-bottom: 40px;
}
.assignment {
    --box-shadow: 0 0 12px -9px black;
    box-shadow: var(--box-shadow);
    background: var(--primary); /* Set white so it doesnt transition background initially if added by priority.js */
    /* i really could not care less about priority-color being consistent */
    --priority-color: white;
    --priority-color-transition-speed: 2s;
    border-radius: 5px;
    position: relative;
    /* Ensures this stacks above .assignment-container::after */
    z-index: 1;
    scroll-margin: 20px;
    transition: all .2s ease-in-out, opacity calc(.375s * var(--animation-speed)) ease-in-out, left 0s, padding 0s;
}
/* do not remove the :not() thing from here i wasted an hour debugging because of this */
.assignment-container:not(#animate-in, #animate-color) .assignment.transition-instantly .priority-color-strip {
    transition: none;
}
.assignment:not(.open-assignment):hover, .assignment:not(.open-assignment):focus {
    transform: scale(var(--scale-percent-x), var(--scale-percent-y));
    cursor: pointer;
}
.assignment:focus {
    outline: 0;
}
.assignment .priority-color-strip {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    /* for some reason this is very laggy with background instead of background-color*/
    background-color: var(--priority-color);
    width: 7px;
    border-radius: 5px 0 0 5px;
    transition: background-color calc(var(--priority-color-transition-speed) * var(--animation-speed));
}
#tutorial-click-assignment-to-open {
    font-size: 18px;
    scroll-margin: 30px;
}
.shortcut {
    position: relative;
    display: none;
    justify-content: space-evenly;
    align-items: center;
    --margin-top-and-bottom: var(--outer-assignment-vertical-padding);
    margin-top: calc(-2 * var(--outer-assignment-vertical-padding) + var(--margin-top-and-bottom));
    margin-bottom: var(--margin-top-and-bottom);
}
.assignment-container .shortcut {
    display: flex;
}
.shortcut-text {
    white-space: nowrap;
    margin-right: 6px;
    margin-left: 5px;

    flex-grow: 0;
    display: flex;
    gap: 5px;
    align-items: center;
}
/* Info buttons */
.shortcut-text:hover {
    z-index: 1000;
}
.shortcut-text .info-button {
    bottom: unset;
    left: unset;
}
#autofill-selection {
    padding-top: 1px !important;
    padding-bottom: 1px !important;
    vertical-align: top;
    font-size: 14px;
}
.shortcut .generic-button {
    margin-top: 1px;
}
.shortcut .generic-button::after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    /* safari focusing on elements with pseudoelements with transform is really buggy
    it doesn't help that safari is also annoyingly uncooperative in possible workarounds
    im just going to leave this visual glitch in and let the users question themselves why they use safari */
    transform: scale(2.6);
    left: 0;
    top: 0;
    position: absolute;
}
.shortcut-line-left, .shortcut-line-right {
    flex-grow: 1;
    --negative-horizontal-margin: -15px;
    
    position: relative;
    height: 20px;
    margin-bottom: -20px;
    border-top: 2px solid var(--color);
}
.shortcut-line-left {
    border-top-left-radius: var(--shortcut-border-radius);
    left: var(--negative-horizontal-margin);
    margin-right: var(--negative-horizontal-margin);
    border-left: 2px solid var(--color);
}
.shortcut-line-right {
    border-top-right-radius: var(--shortcut-border-radius);
    right: var(--negative-horizontal-margin);
    margin-left: var(--negative-horizontal-margin);
    border-right: 2px solid var(--color);
}
.assignment-container.add-line-wrapper::before,
.assignment-container.add-line-wrapper::after {
    content: '';
    position: absolute;
    height: 100%;
    --horizontal-margin: 10px;
    margin: 0 var(--horizontal-margin);
    width: 36px;
    bottom: -1px;
    box-sizing: border-box;
}
.assignment-container.add-line-wrapper::before {
    left: 0;
    border-left: 2px solid var(--color);
}
.assignment-container.add-line-wrapper::after {
    right: 0;
    border-right: 2px solid var(--color);
}
.assignment-container.first-add-line-wrapper::before,
.assignment-container.first-add-line-wrapper::after {
    height: calc(100% - 30px);
}
.assignment-container.last-add-line-wrapper::before,
.assignment-container.last-add-line-wrapper::after {
    border-bottom: 2px solid var(--color);
}
.assignment-container.last-add-line-wrapper::before {
    border-bottom-left-radius: var(--shortcut-border-radius);
}
.assignment-container.last-add-line-wrapper::after {
    border-bottom-right-radius: var(--shortcut-border-radius);
}
.assignment-header {
    display: flex;
    position: relative;
    padding: var(--vertical-assignment-padding) var(--horizontal-assignment-padding);
    align-items: center;
    --arrow-margin-left: max(5px, calc(2px + 2vw));
}
.left-side-of-header {
    display: flex; /* things position weirdly when assignments are open without this for some reason */
    flex-direction: column; /* put description below name */
    position: relative;
    --description-opacity: 0.65;
    --description-font-size: 0.7em;
    --left-side-of-header-width: max(140px, calc(67px + 10vw));
}
.description {
    position: relative;
    display: none;
    /* IMPORTANT TO REMEMBER: A new stacking context is apparantly needed for the line clamping to work
    opacity achieves this
    reference: https://stackoverflow.com/questions/16148007/which-css-properties-create-a-stacking-context */

    /* Opacity should also be used to ensure the dark mode text coloring appearance works */
    opacity: var(--description-opacity);
    transform: translateY(-2px);
    min-width: var(--left-side-of-header-width);
    max-width: var(--left-side-of-header-width);
    word-wrap: break-word;
    font-size: var(--description-font-size);
}
.description p:first-of-type {
    margin-top: 0;
}
.description p:last-of-type {
    margin-bottom: 0;
}
.left-side-of-header .title .title-link-anchor {
    display: none;
}
.left-side-of-header .title .title-link-anchor {
    color: var(--color);
}
.left-side-of-header .title .title-link-icon {
    margin-bottom: -2.5px;
    border-bottom: 1.5px solid var(--color);
    padding-bottom: 3px;
    transition: inherit;
    transition-property: border-bottom-color;
}
/* Add to truncate warning if the below style is changed */
.assignment.open-assignment .description {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
}
.assignment.open-assignment .left-side-of-header.display-truncate-warning::after {
    content: "[Description shortened]";
    opacity: var(--description-opacity);
    font-size: var(--description-font-size);
    white-space: nowrap;
    margin-top: 1em;
    margin-bottom: 2px;
    max-width: var(--left-side-of-header-width);
}
.assignment.assignment-is-deleting {
    pointer-events: none;
}
.assignment.open-assignment, .assignment.assignment-is-closing {
    padding-bottom: unset;
}
.assignment:not(.open-assignment) .title {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
}
.title {
    min-width: var(--left-side-of-header-width);
    max-width: var(--left-side-of-header-width);
    --smush-daysleft: 2px;
    --smush-priority: 3px;
    overflow-wrap: break-word;
}
.title::after, .title::before {
    position: absolute;
    white-space: nowrap;
    font-size: 0.75em;
}
.title[data-priority]::before {
    content: attr(data-priority) !important;
    transform: translateY(-100%) translateY(var(--smush-priority));
}
.title[data-daysleft]::after {
    content: attr(data-daysleft) !important;
    transform: translateY(100%) translateY(calc(-1 * var(--smush-daysleft)));
    width: calc(100% + var(--arrow-margin-left));
    padding-bottom: 20px; /* hover padding */
    left: 0;
    bottom: 0;
}
.assignment.show-long-daysleft .title[data-long-daysleft]::after {
    content: attr(data-long-daysleft) !important;
}
.arrow-container {
    margin-left: var(--arrow-margin-left);
    margin-right: 11px;
    overflow: visible;
    fill: currentColor;
}
.status-image {
    flex-shrink: 0;
}
.middle-of-header {
    margin: 0;
    white-space: initial;
    display: flex;
    align-items: center;
}
/* selects the element right before right-side-of-header
do this because midde-of-header is hidden in the delete assignments view */
.assignment-header > :nth-last-child(2) {
    margin-right: 25px;
}
.align-to-status-message-container {
    margin-left: 5px;
}
.tags {
    position: absolute;
    z-index: 1;
    white-space: nowrap;
    font-size: 0.75em;
    --tags-left--margin-bottom: 7px;
    --tags-bottom--margin-bottom: 3px;
    --tags-right--margin-right: 2px;
    --tags-top--margin-top: 3px;
}
.tags [tabindex]:focus, .tags input:focus {
    outline: 0;
}


.tags.tags-right {
    right: calc(var(--tags-right--margin-right) + var(--horizontal-assignment-padding));
    z-index: 2;
}
/* .tags.tags-middle isn't required because it's prepended to another element to position it */
.tags.tags-left {
    left: var(--horizontal-assignment-padding);
}
.tags.tags-top {
    top: var(--tags-top--margin-top)
}
.tags.tags-bottom {
    bottom: var(--tags-bottom--margin-bottom);
}

.tag-wrapper {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 0 5px;
    border: 1px solid var(--color);
    border-radius: 10px;
    opacity: 1;
    cursor: ew-resize;
    margin-right: 3px;
    --background-color: linear-gradient(135deg, white 0%, hsl(0, 0%, 87%) 100%);
    background: var(--background-color);
    transform-origin: right;
    --ghost-opacity: 0.4;
    transition: margin-left calc(0.75s * var(--animation-speed)) ease-in-out,
                opacity calc(0.7s * var(--animation-speed)) linear,
                transform calc(0.5s * var(--animation-speed)) linear calc(0.2s * var(--animation-speed));
}
.tag-wrapper.ghost {
    --ghost-color: rgba(var(--c), var(--c), var(--c), var(--ghost-opacity));
    border-color: var(--ghost-color);
    color: var(--ghost-color)
}
.tag-wrapper.ghost .tag-delete {
    background-color: var(--ghost-color);
}
.tag-delete {
    position: absolute;
    width: 9px;
    height: 9px;
    right: 3px;
    border-radius: 50%;
    background-color: var(--color);
    cursor: pointer;
    opacity: 0;
    transform: scale(0.8);
    transition: opacity calc(0.1s * var(--animation-speed)) linear, transform calc(0.1s * var(--animation-speed)) cubic-bezier(0.55, 0.09, 0.68, 0.53) calc(0.05s * var(--animation-speed));
}
.tag-delete > .icon-slash {
    --background-color: white;
    background-color: var(--background-color);
}
/* Don't do :hover::after because the ::after doesnt then become pointless */
.tag-delete::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 9px;
    transform: translate(-25%, -25%) translateY(-3px);
    border-radius: 50%;
    border: 10px solid transparent;
}
.tag-add {
    position: relative;
    vertical-align: top;
    display: inline-block;
    top: 0;
    width: 16.8px;
    height: 16.8px;
    border-radius: 10px;
    --background-color: hsl(0, 0%, 91%);
    background-color: var(--background-color);
    border: 1px dashed var(--color);
    cursor: pointer;
    transition: width calc(0.25s * var(--animation-speed)) ease-out;
}
.tag-add::after {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0;
    left: -10px;
    width: calc(100% + 20px);
    height: 100%;
    transform: scaleY(2.25);
    border-radius: 17px;
}
.tag-add-text {
    opacity: 0;
    transition: opacity calc(0.2s * var(--animation-speed)) linear;
    text-align: right;
    direction: rtl;
    margin-right: 4px;
    margin-left: 10px;

    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}
.tag-name {
    position: relative;
    z-index: 1;
    transition: margin-right calc(0.15s * var(--animation-speed)) ease-in-out;
}
.tag-wrapper:hover .tag-name, .tag-wrapper.keep-delete-open .tag-name {
    margin-right: 11px;
}
.tag-wrapper:hover .tag-delete, .tag-wrapper.keep-delete-open .tag-delete {
    opacity: 1;
    transform: scale(1.2);
}
.tag-add:hover, .assignment.open-tag-add-box .tag-add {
    width: 68px;
}
.tag-add:hover .tag-add-text, .assignment.open-tag-add-box .tag-add-text {
    opacity: 1;
}
.tag-add-box {
    white-space: normal;
    width: 155px;
    --box-shadow-color: hsla(0, 0%, 67%, 0.65);
    --input-background-color: hsl(0, 0%, 86%);
    --background-color: var(--body-background);

    box-shadow: 0 2px 5px 1px var(--box-shadow-color) !important;
    background: var(--background-color) !important;
    transform-origin: top;
    transform: translateX(-50%) translate(8px, -5px) scale(0.85) !important;
    /* let's use 0.14 instead of 0.15 because 0.15 can overflow offscreen and cause the 
    x scrollbar to show up */
    transition: transform calc(0.14s * var(--animation-speed)) cubic-bezier(0.31, 1.15, 0.5, 1.2),
                opacity calc(0.1s * var(--animation-speed)) ease-out;
}
/* mobile view also effects the left */
.tags.tags-left .tag-add-box {
    --move-left: 43px;
    left: var(--move-left);
}
.tag-add-box::after {
    border-color: transparent transparent var(--input-background-color) transparent !important;
    pointer-events: none;
    margin-right: var(--move-left);
    bottom: calc(100% - 1px) !important; /* -1 because 100% sometimes doesnt align properly */
}
.assignment.open-tag-add-box {
    z-index: 1001;
}
.assignment.open-tag-add-box .tag-add-box {
    transform: translateX(-50%) translateX(8px) !important;
    opacity: 1;
    height: unset;
    overflow: visible;
    border: 1px solid hsl(0, 0%, 50%);
}
.tag-add-overflow-hidden-container {
    overflow: hidden;
    border-radius: 5px;
}
.tag-add-button {
    position: absolute;
    width: 30px;
    height: 30px;
    right: 4px;
    top: 4px;
    border-radius: 50%;
    --background-color: hsl(0, 0%, 76%);
    background-color: var(--background-color);
}
.tag-add-button::after {
    --box-shadow-color-default: hsl(0, 0%, 24%);
    --box-shadow-color-focus: hsl(0, 0%, 12%);
    --box-shadow-color-invalid: rgb(170, 0, 0);

    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    box-shadow: 0 0 4px 1px var(--box-shadow-color-default);
    opacity: 0;
    transition: opacity 0.15s ease-out;
}
.tag-add-button:focus::after {
    opacity: 0.35;
}
.tag-add-button:focus:not(:hover)::after {
    box-shadow: 0 0 4px 2px var(--box-shadow-color-focus);
}
.tag-add-button:hover::after {
    opacity: 0.75;
}
.tag-add-button.tag-add-red-box-shadow::after {
    box-shadow: 0 0 4px 1px var(--box-shadow-color-invalid);
}
.tag-add-button > .icon-slash {
    --background-color: hsl(0, 0%, 25%);
    background-color: var(--background-color);
    height: 15px;
}
.tag-add-input {
    width: 100%;
    box-sizing: border-box;
    border: none;
    background-color: var(--input-background-color);
    padding: 10px 12px;
    padding-right: 38px;
}

.tag-add-selection-item {
    position: relative;
    padding: 6px 4px;
}
.tag-add-selection-item::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    margin-top: auto;
    margin-bottom: auto;
    width: 100%;
    height: 100%;
    z-index: -1;
    --background-color: hsl(0, 0%, 94%);
    background-color: var(--background-color);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s cubic-bezier(.29,.81,.37,.99);
}
.tag-add-selection-item:hover::after, .tag-add-selection-item:focus::after {
    transform: none;
}
.tag-add-selection-item.checked::after {
    --background-color: rgb(173, 216, 230);
    background-color: var(--background-color);
    transform: none;
}
.tag-add-selection-item:nth-child(n+4)::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    margin-right: auto;
    margin-left: auto;
    width: calc(100% - 10px);
    height: 1px;
    background-color: hsl(0, 0%, 50%);
}
.tag-add-selection-item-name {
    word-break: break-word;
}
.tag-add-checkbox {
    -webkit-appearance: revert;
}
.tag-add-transition-disabler {
    transition: none !important;
}
.icon-slash {
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    margin: auto;
    height: 6px;
    width: 1px;
    position: absolute;
}
.tag-add > .icon-slash {
    right: unset;
    left: 7.75px;
    height: 10px;
    background-color: var(--color);
}
.x-first-slash {
    transform: rotate(45deg);
}
.x-second-slash {
    transform: rotate(-45deg);
}
.plus-second-slash {
    transform: rotate(90deg);
}
.completion-time {
    white-space: nowrap;
    margin-right: 3px;
    align-self: center;
}
.right-side-of-header {
    margin-left: auto;
    display: flex;
    align-self: normal;
}
.assignment-header-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    /* negate the variable pixel value */
    margin-top: calc(-1 * var(--vertical-assignment-padding));
    margin-bottom: calc(-1 * var(--vertical-assignment-padding));
    margin-right: -4px;
    padding: 0 7px;
    cursor: pointer;
    background-color: var(--background-color);
    transition: background-color 0.25s ease-out;
}
.assignment-header-button:focus, .assignment-header-button:hover {
    outline: 0;
    --background-color: rgb(173, 216, 230);
}
.assignment-header-button:active svg {
    transform: scale(0.95);
    /* I can't apply this to just "svg" for some odd reason */
    transform-origin: center;
}
.assignment-header-button * {
    transition: transform 0.15s cubic-bezier(.29,1.13,.48,2.37);
    color: var(--color);
}
.assignment-footer {
    padding-right: var(--horizontal-assignment-padding);
    padding-left: var(--horizontal-assignment-padding);
    --assignment-margin-bottom: 12px;
    box-sizing: border-box;
    display: none;
    /* firefox acts weirdly without this */
    width: 100%;
}
.graph-container > table {
    padding: 4px;
    top: 0;
    position: absolute;
    letter-spacing: 0.5px;
    --background-color: hsl(0, 0%, 97%);
    background-color: var(--background-color);
    display: block;
    overflow-y: scroll;
    overflow-x: auto;
    white-space: nowrap;
    -webkit-user-select: text;
       -moz-user-select: text;
        -ms-user-select: text;
            user-select: text;
}
.graph-container:not(.text-display) > table,
.graph-container.text-display > :not(table) {
    opacity: 0;
    pointer-events: none;
}
.today-display-in-text {
    display: flex;
    align-items: center;
    gap: 4px;
}
.today-display-in-text hr {
    display: inline-block;
    flex-grow: 1;
}
.graph-container {
    border-radius: 12px;
    height: clamp(200px,65vh,400px);
    position: relative;
    border: 2px solid hsla(0, 0%, 42%, 0.75); /* hsl(0, 0%, 70%) */
}
.graph-container > :not(.hover-point-label) {
    width: 100%;
    height: 100%;
    border-radius: 10px;
    transition: opacity calc(0.1s * var(--animation-speed)) ease-out;
}
.hover-point-label {
    position: absolute;
    padding: 4px 7px;
    font-size: 15px;
    box-shadow: 0 1px 3px 1px hsla(0, 0%, 0%, 0.3);
    background-color: var(--primary);
    border-radius: 3px;
    z-index: 1;
    pointer-events: none; /* hovering this label doesn't allow clicking the graph */
    --translatex: 10px;
    /* Don't make transform origin left or right or else the transitions between left and right get messed up */
    transform: translate(calc(1px * var(--x)), calc(1px * var(--y))) translate(var(--translatex), -50%);
    transition: transform calc(0.1s * clamp(0, var(--animation-speed) * 999, 1)) linear;
}
.hover-point-label.hide-label {
    transform: translate(calc(1px * var(--x)), calc(1px * var(--y))) translate(var(--translatex), -50%) 
            scale(0.002); /* for some really odd reason scale(0) break the transition on safari and on mobile */
}
.hover-point-label.initial-position {
    transform: scale(0.002);
}
.hover-point-label.move-left {
    --translatex: calc(-100% - 10px);
}
.hover-point-label.disable-hover-point-label-transition {
    transition: none;
}
.fixed-graph {
    position: absolute;
}
.graph {
    display: block;
    position: relative;
}
.graph-footer {
    position: relative;
}
.graph-footer * {
    font-size: 15px;
    border-radius: 20px;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    --background-color: hsl(0, 0%, 87%);
    background-color: var(--background-color);
    color: var(--color);
    z-index: 1;
}
.graph-footer :focus {
    outline: 0;
    border-color: var(--input-focus-color);
    background: inherit;
    box-shadow: inset 0 0 0 3px var(--input-focus-color);
}
/* 1st column */
.delete-work-input-button, .fixed-mode-button {
    position: absolute;
    left: 0;
}
/* 2nd column */
.work-input-textbox, .skew-ratio-button {
    position: relative;
    z-index: unset;
    left: 50%;
    transform: translateX(-50%);
}
/* 3rd column */
.submit-work-button, .display-in-text-button {
    position: absolute;
    right: 0;
}
/* 1st row */
.delete-work-input-button, .work-input-textbox, .submit-work-button {
    margin-top: 12px;
}
/* 2nd row */
.skew-ratio-button, .display-in-text-button, .fixed-mode-button {
    margin-top: 13px;
    margin-bottom: var(--assignment-margin-bottom);
}
.work-input-textbox {
    width: 123px;
}
#extra-navs {
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    display: flex;
    visibility: hidden;
    justify-content: center;
    white-space: nowrap;
    flex-wrap: wrap;
    margin-right: 45px;
    margin-left: 45px;
    gap: 7px;
    --font-size: 15px;
    font-size: var(--font-size);
    line-height: calc(3 * var(--font-size));
}
main:not(.background-image-exists) #extra-navs {
    filter: invert(0.3);
}
main.finished-header-transition #extra-navs {
    visibility: initial;
}
#extra-navs span {
    white-space: nowrap;
}
#extra-navs span a {
    color: var(--color);
    /* So tabbing on an extra-nav scrolls #assignments-container all the way down */
    scroll-margin: 20px;
}
#extra-navs span * {
    cursor: pointer;
    text-decoration: underline;
}

.daterangepicker,
.daterangepicker .calendar-table {
    background-color: var(--primary);
    transform: translateX(-5px);
}
.daterangepicker td:not(.active, :hover) {
    background-color: unset !important;
}
.daterangepicker .calendar-table .available span {
    border-color: var(--color);
}

.grey-highlight:not(.assignment-container),
.grey-highlight.assignment-container::after,
.grey-highlight.assignment-container::before {
    --filter-drop-shadow-color: hsl(0, 0%, 73%);
    --filter-drop-shadow-width: 0.5px;
    filter: drop-shadow(0 var(--filter-drop-shadow-width) 0 var(--filter-drop-shadow-color, transparent))
            drop-shadow(0 calc(-1 * var(--filter-drop-shadow-width)) 0 var(--filter-drop-shadow-color, transparent))
            drop-shadow(var(--filter-drop-shadow-width) 0 0 var(--filter-drop-shadow-color, transparent))
            drop-shadow(calc(-1 * var(--filter-drop-shadow-width)) 0 0 var(--filter-drop-shadow-color, transparent));
}


/* Mobile view */
@media screen and (max-width: 850px) {
    .assignment {
        --box-shadow: 0 0 12px -8px black;
    }
    #assignments-container {
        --outer-assignment-horizontal-padding: 13px;
        --outer-assignment-vertical-padding: 7px;
    }
    .assignment-container.add-line-wrapper::before,
    .assignment-container.add-line-wrapper::after {
        --horizontal-margin: 4px;
    }
    .shortcut-line-left, .shortcut-line-right {
        --negative-horizontal-margin: -9px;
    }
    .shortcut-text {
        font-size: 16px;
    }
    .hide-on-mobile {
        display: none;
    }
    .left-side-of-header .title .title-link-anchor {
        display: initial;
    }
    .tags.tags-left .tag-add-box {
        left: 56px;
    }
    main {
        box-shadow: none;
        padding-left: 0 !important;
        padding-right: 0 !important;
    }
}